!/usr/bin/python3

======================
Using ``BaseGeometry function`` return the values
-------------------

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> b = BaseGeometry()
>>> b.integer_validator("integer", 0)
Traceback (most recent call last):
...
ValueError: integer must be greater than 0

>>> b.integer_validator("integer", -1)
Traceback (most recent call last):
...
ValueError: integer must be greater than 0

>>> b.integer_validator("name", "hi")
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> b.integer_validator("list", [2, 4, 6])
Traceback (most recent call last):
...
TypeError: list must be an integer

>>> b.integer_validator("tuple", {3, 5, 7})
Traceback (most recent call last):
...
TypeError: tuple must be an integer

>>> b.integer_validator("double", 6.55)
Traceback (most recent call last):
...
TypeError: double must be an integer

>>> b.integer_validator("float", 2.5)
Traceback (most recent call last):
...
TypeError: float must be an integer

>>> b.integer_validator("speed", -4)
Traceback (most recent call last):
...
ValueError: speed must be greater than 0

>>> b.integer_validator("data", "hello")
Traceback (most recent call last):
...
TypeError: data must be an integer

>>> b.integer_validator("data", -6)
Traceback (most recent call last):
...
ValueError: data must be greater than 0

>>> b.integer_validator("integer", 6, 4)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> b.integer_validator("integer")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> b.integer_validator("integer", 4)

>>> b.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

!/usr/bin/python3

======================
Using ``BaseGeometry function`` return the values
-------------------

>>> BG = __import__('7-base_geometry').BaseGeometry

>>> b = BG()
>>> b.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> b.area(1)
Traceback (most recent call last):
...
TypeError: area() takes 1 positional argument but 2 were given

>>> b.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> b.integer_validator("age", -1)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> b.integer_validator("name", "hi")
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> b.integer_validator("list", [2, 4, 6])
Traceback (most recent call last):
...
TypeError: list must be an integer

>>> b.integer_validator("tuple", {3, 5, 7})
Traceback (most recent call last):
...
TypeError: tuple must be an integer

>>> b.integer_validator("double", 6.55)
Traceback (most recent call last):
...
TypeError: double must be an integer

>>> b.integer_validator("float", 2.5)
Traceback (most recent call last):
...
TypeError: float must be an integer

>>> b.integer_validator("age", -4)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> b.integer_validator("data", "hello")
Traceback (most recent call last):
...
TypeError: data must be an integer

>>> b.integer_validator("data", -6)
Traceback (most recent call last):
...
ValueError: data must be greater than 0

>>> b.integer_validator("integer", 6, 4)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> b.integer_validator("age")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> b.integer_validator("age", 4)

>>> b.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> b.integer_validator("name", "string")
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> b.integer_validator("string", "hello")
Traceback (most recent call last):
...
TypeError: string must be an integer

>>> b.integer_validator("age", "True")
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> b.integer_validator("string", "False")
Traceback (most recent call last):
...
TypeError: string must be an integer

>>> b.integer_validator("dict", {"key" : "value"})
Traceback (most recent call last):
...
TypeError: dict must be an integer

>>> b.integer_validator("set", {"name" : "value"})
Traceback (most recent call last):
...
TypeError: set must be an integer

>>> b.integer_validator("complex", complex(2, 4))
Traceback (most recent call last):
...
TypeError: complex must be an integer

>>> b.integer_validator("bytearrays", bytearray(b"bytes"))
Traceback (most recent call last):
...
TypeError: bytearrays must be an integer
